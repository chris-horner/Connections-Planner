plugins {
  alias(libs.plugins.android.application)
  alias(libs.plugins.kotlin.android)
  alias(libs.plugins.kotlin.compose)
  alias(libs.plugins.kotlin.parcelize)
  alias(libs.plugins.kotlin.serialization)
  alias(libs.plugins.playpublisher)
}

def versionMajor = 0
def versionMinor = 8
def versionPatch = 0

android {
  namespace 'codes.chrishorner.planner'
  compileSdk 35

  defaultConfig {
    applicationId "codes.chrishorner.planner"
    minSdk 31
    targetSdk 35
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
  }

  signingConfigs {
    debug {
      storeFile file('keys/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
    }

    release {
      def uploadKey = file('keys/upload.keystore')
      storeFile uploadKey.exists() ? uploadKey : file('keys/debug.keystore')
      storePassword System.getenv("connections_planner_password") ?: 'android'
      keyAlias System.getenv("connections_planner_alias") ?: 'androiddebugkey'
      keyPassword System.getenv("connections_planner_password") ?: 'android'
    }
  }


  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.release
      proguardFiles file('shrinker_rules.pro')
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = '11'
    freeCompilerArgs += [
            '-opt-in=androidx.compose.animation.ExperimentalSharedTransitionApi',
            '-opt-in=androidx.compose.material3.ExperimentalMaterial3Api',
            '-opt-in=kotlinx.serialization.ExperimentalSerializationApi',
    ]
  }

  buildFeatures {
    compose true
    buildConfig true
  }

  packagingOptions {
    resources {
      excludes += ['**/*.kotlin_metadata', 'META-INF/*.kotlin_module', 'META-INF/*.properties', '/*.properties']
    }
  }

  bundle {
    language {
      enableSplit = false // We currently only have one language.
    }
  }

  testOptions {
    unitTests {
      returnDefaultValues = true
    }
  }
}

play {
  serviceAccountCredentials = file('keys/play_access.json')
  defaultToAppBundles = true
  resolutionStrategy = com.github.triplet.gradle.androidpublisher.ResolutionStrategy.IGNORE
}

dependencies {
  implementation libs.androidx.activity.compose
  implementation libs.androidx.animation
  implementation libs.androidx.core.ktx
  implementation libs.androidx.material3
  implementation libs.androidx.ui
  implementation libs.androidx.ui.graphics
  implementation libs.androidx.ui.tooling.preview
  implementation libs.coil.compose
  implementation libs.coil.okhttp
  implementation libs.coil.svg
  implementation libs.kotlinx.collections.immutable
  implementation libs.kotlinx.datetime
  implementation libs.kotlinx.serialization.json
  implementation libs.logging.android
  implementation libs.okhttp
  implementation platform(libs.androidx.compose.bom)

  debugImplementation libs.androidx.ui.test.manifest
  debugImplementation libs.androidx.ui.tooling

  testImplementation libs.assertk
  testImplementation libs.kotlin.test
  testImplementation libs.kotlinx.coroutines.test
}