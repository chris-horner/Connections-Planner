plugins {
  alias(libs.plugins.android.application)
  alias(libs.plugins.kotlin.android)
  alias(libs.plugins.kotlin.compose)
  alias(libs.plugins.kotlin.parcelize)
  alias(libs.plugins.kotlin.serialization)
}

def versionMajor = 0
def versionMinor = 5
def versionPatch = 0

android {
  namespace 'codes.chrishorner.planner'
  compileSdk 35

  defaultConfig {
    applicationId "codes.chrishorner.planner"
    minSdk 31
    targetSdk 35
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'shrinker_rules.pro'
      signingConfig signingConfigs.debug // TODO: Replace with real config.
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
  kotlinOptions {
    jvmTarget = '11'
    freeCompilerArgs += ['-Xcontext-receivers']
  }
  buildFeatures {
    compose true
    buildConfig true
  }
}

dependencies {
  implementation libs.androidx.activity.compose
  implementation libs.androidx.animation
  implementation libs.androidx.core.ktx
  implementation libs.androidx.material3
  implementation libs.androidx.ui
  implementation libs.androidx.ui.graphics
  implementation libs.androidx.ui.tooling.preview
  implementation libs.coil.compose
  implementation libs.coil.okhttp
  implementation libs.coil.svg
  implementation libs.kotlinx.serialization.json
  implementation libs.okhttp
  implementation platform(libs.androidx.compose.bom)

  debugImplementation libs.androidx.ui.test.manifest
  debugImplementation libs.androidx.ui.tooling
}